server:
  #端口号
  port: 8080
  #上下文路径
  servlet:
    context-path: /demo

spring:
  datasource:
    #Driver
    driver-class-name: com.mysql.jdbc.Driver
    #数据库账号
    username: root
    #数据库密码
    password: qinyuqin
    #数据库连接
    url: jdbc:mysql://localhost:3306/demo?useUnicode=true&characterEncoding=utf-8&useSSL=false
    #数据库资源池连接类型
    type: com.alibaba.druid.pool.DruidDataSource

    #数据源其他配置

    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
#   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    maxPoolPreparedStatementPerConnectionSize: 20
    useGlobalDataSourceStat: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500

    #检测数据库链接是否有效，必须配置
    jdbc.validationQuery=SELECT 'x'
    #初始连接数
    jdbc.initialSize=3
    #最大连接池数量
    jdbc.maxActive=10
    #去掉，配置文件对应去掉
    #jdbc.maxIdle=20
    #配置0,当线程池数量不足，自动补充。
    jdbc.minIdle=0
    #获取链接超时时间为1分钟，单位为毫秒。
    jdbc.maxWait=60000
    #获取链接的时候，不校验是否可用，开启会有损性能。
    jdbc.testOnBorrow=false
    #归还链接到连接池的时候校验链接是否可用。
    jdbc.testOnReturn=false
    #此项配置为true即可，不影响性能，并且保证安全性。意义为：申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    jdbc.testWhileIdle=true
    #1.Destroy线程会检测连接的间隔时间
    #2.testWhileIdle的判断依据
    jdbc.timeBetweenEvictionRunsMillis=60000
    #一个链接生存的时间（之前的值：25200000，这个时间有点BT，这个结果不知道是怎么来的，换算后的结果是：25200000/1000/60/60 = 7个小时）
    jdbc.minEvictableIdleTimeMillis=300000
    #链接使用超过时间限制是否回收
    jdbc.removeAbandoned=true
    #超过时间限制时间（单位秒），目前为5分钟，如果有业务处理时间超过5分钟，可以适当调整。
    jdbc.removeAbandonedTimeout=300
    #链接回收的时候控制台打印信息，测试环境可以加上true，线上环境false。会影响性能。
    jdbc.logAbandoned=false

#druid standard config
spring

spring.datasource.maxActive=30
spring.datasource.initialSize=3
spring.datasource.minIdle=3
spring.datasource.maxWait=120000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=select 'z'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false

#druid extends config
spring.datasource.filters: stat,wall,log4j
spring.datasource.poolPreparedStatements: true
spring.datasource.maxOpenPreparedStatements: 20
spring.datasource.logSlowSql: true






mybatis:
  config-location: classpath:mybatis/mybatis_config.xml
  


